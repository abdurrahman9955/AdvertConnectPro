{"version":3,"file":"InputSmart.js","names":["React","useCallback","PropTypes","Input","AsYouType","getInputValuePrefix","removeInputValuePrefix","parsePhoneNumberCharacter","useInputKeyDownHandler","createInput","defaultMetadata","InputSmart","ref","onKeyDown","country","international","withCountryCallingCode","metadata","rest","format","value","formatter","prefix","text","input","template","getTemplate","_onKeyDown","forwardRef","propTypes","string","isRequired","onChange","func","bool","object"],"sources":["../source/InputSmart.js"],"sourcesContent":["import React, { useCallback } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Input from 'input-format/react'\r\nimport { AsYouType } from 'libphonenumber-js/core'\r\n\r\nimport { getInputValuePrefix, removeInputValuePrefix } from './helpers/inputValuePrefix.js'\r\nimport parsePhoneNumberCharacter from './helpers/parsePhoneNumberCharacter.js'\r\n\r\nimport useInputKeyDownHandler from './useInputKeyDownHandler.js'\r\n\r\nexport function createInput(defaultMetadata)\r\n{\r\n\t/**\r\n\t * `InputSmart` is a \"smarter\" implementation of a `Component`\r\n\t * that can be passed to `<PhoneInput/>`. It parses and formats\r\n\t * the user's and maintains the caret's position in the process.\r\n\t * The caret positioning is maintained using `input-format` library.\r\n\t * Relies on being run in a DOM environment for calling caret positioning functions.\r\n\t */\r\n\tfunction InputSmart({\r\n\t\tonKeyDown,\r\n\t\tcountry,\r\n\t\tinternational,\r\n\t\twithCountryCallingCode,\r\n\t\tmetadata = defaultMetadata,\r\n\t\t...rest\r\n\t}, ref) {\r\n\t\tconst format = useCallback((value) => {\r\n\t\t\t// \"As you type\" formatter.\r\n\t\t\tconst formatter = new AsYouType(country, metadata)\r\n\t\t\tconst prefix = getInputValuePrefix({\r\n\t\t\t\tcountry,\r\n\t\t\t\tinternational,\r\n\t\t\t\twithCountryCallingCode,\r\n\t\t\t\tmetadata\r\n\t\t\t})\r\n\t\t\t// Format the number.\r\n\t\t\tlet text = formatter.input(prefix + value)\r\n\t\t\tlet template = formatter.getTemplate()\r\n\t\t\tif (prefix) {\r\n\t\t\t\ttext = removeInputValuePrefix(text, prefix)\r\n\t\t\t\t// `AsYouType.getTemplate()` can be `undefined`.\r\n\t\t\t\tif (template) {\r\n\t\t\t\t\ttemplate = removeInputValuePrefix(template, prefix)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\ttext,\r\n\t\t\t\ttemplate\r\n\t\t\t}\r\n\t\t}, [country, metadata])\r\n\r\n\t\tconst _onKeyDown = useInputKeyDownHandler({\r\n\t\t\tonKeyDown,\r\n\t\t\tinternational\r\n\t\t})\r\n\r\n\t\treturn (\r\n\t\t\t<Input\r\n\t\t\t\t{...rest}\r\n\t\t\t\tref={ref}\r\n\t\t\t\tparse={parsePhoneNumberCharacter}\r\n\t\t\t\tformat={format}\r\n\t\t\t\tonKeyDown={_onKeyDown}/>\r\n\t\t)\r\n\t}\r\n\r\n\tInputSmart = React.forwardRef(InputSmart)\r\n\r\n\tInputSmart.propTypes = {\r\n\t\t/**\r\n\t\t * The parsed phone number.\r\n\t\t * \"Parsed\" not in a sense of \"E.164\"\r\n\t\t * but rather in a sense of \"having only\r\n\t\t * digits and possibly a leading plus character\".\r\n\t\t * Examples: `\"\"`, `\"+\"`, `\"+123\"`, `\"123\"`.\r\n\t\t */\r\n\t\tvalue: PropTypes.string.isRequired,\r\n\r\n\t\t/**\r\n\t\t * A function of `value: string`.\r\n\t\t * Updates the `value` property.\r\n\t\t */\r\n\t\tonChange: PropTypes.func.isRequired,\r\n\r\n\t\t/**\r\n\t\t * A function of `event: Event`.\r\n\t\t * Handles `keydown` events.\r\n\t\t */\r\n\t\tonKeyDown: PropTypes.func,\r\n\r\n\t\t/**\r\n\t\t * A two-letter country code for formatting `value`\r\n\t\t * as a national phone number (e.g. `(800) 555 35 35`).\r\n\t\t * E.g. \"US\", \"RU\", etc.\r\n\t\t * If no `country` is passed then `value`\r\n\t\t * is formatted as an international phone number.\r\n\t\t * (e.g. `+7 800 555 35 35`)\r\n\t\t * Perhaps the `country` property should have been called `defaultCountry`\r\n\t\t * because if `value` is an international number then `country` is ignored.\r\n\t\t */\r\n\t\tcountry: PropTypes.string,\r\n\r\n\t\t/**\r\n\t\t * If `country` property is passed along with `international={true}` property\r\n\t\t * then the phone number will be input in \"international\" format for that `country`\r\n\t\t * (without \"country calling code\").\r\n\t\t * For example, if `country=\"US\"` property is passed to \"without country select\" input\r\n\t\t * then the phone number will be input in the \"national\" format for `US` (`(213) 373-4253`).\r\n\t\t * But if both `country=\"US\"` and `international={true}` properties are passed then\r\n\t\t * the phone number will be input in the \"international\" format for `US` (`213 373 4253`)\r\n\t\t * (without \"country calling code\" `+1`).\r\n\t\t */\r\n\t\tinternational: PropTypes.bool,\r\n\r\n\t\t/**\r\n\t\t * If `country` and `international` properties are set,\r\n\t\t * then by default it won't include \"country calling code\" in the input field.\r\n\t\t * To change that, pass `withCountryCallingCode` property,\r\n\t\t * and it will include \"country calling code\" in the input field.\r\n\t\t */\r\n\t\twithCountryCallingCode: PropTypes.bool,\r\n\r\n\t\t/**\r\n\t\t * `libphonenumber-js` metadata.\r\n\t\t */\r\n\t\tmetadata: PropTypes.object\r\n\t}\r\n\r\n\treturn InputSmart\r\n}\r\n\r\nexport default createInput()"],"mappings":"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"}